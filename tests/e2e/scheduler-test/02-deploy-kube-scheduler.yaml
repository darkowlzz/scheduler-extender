apiVersion: v1
kind: ConfigMap
metadata:
  name: demo-scheduler-policy
data:
  policy.cfg: |2
        {
          "kind" : "Policy",
          "apiVersion" : "v1",
          "predicates" : [
            {"name" : "PodFitsHostPorts"},
            {"name" : "PodFitsResources"},
            {"name" : "NoDiskConflict"},
            {"name" : "MatchNodeSelector"},
            {"name" : "HostName"}
          ],
          "extenders" : [{
            "urlPrefix": "https://webhook-service:8888/",
            "filterVerb": "filter",
            "prioritizeVerb": "prioritize",
            "weight": 1,
            "enableHttps": true,
            "nodeCacheCapable": false
          }]
        }
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: demo-scheduler-sa
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: demo:scheduler-extender
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: demo-scheduler-sa
  namespace: default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: demo-scheduler
  labels:
    app: demo-scheduler
spec:
  selector:
    matchLabels:
      app: demo-scheduler
  replicas: 1
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: demo-scheduler
    spec:
      containers:
      - args:
        - kube-scheduler
        - --leader-elect=false
        - --scheduler-name=demo-scheduler
        - --policy-configmap=demo-scheduler-policy
        - --policy-configmap-namespace=default
        - --lock-object-name=demo-scheduler
        - -v=4
        image: k8s.gcr.io/kube-scheduler:v1.20.5
        imagePullPolicy: IfNotPresent
        name: scheduler
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      serviceAccountName: demo-scheduler-sa
